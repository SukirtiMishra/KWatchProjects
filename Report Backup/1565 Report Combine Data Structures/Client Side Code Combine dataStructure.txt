
//Add custom code to the form base goes right here - this is where you add custom functions that you need
//to add to the form base object
function onLoadFormBase1565(formBase) {
  

    formBase.RefreshStructureUse = function (control, ControlInfo, result, ContinueCallBack, FailCallBack) {
        formBase.GetControlValue(control.value(), function (result) {
            try {
                if (result.success) {
                    var FilterSectionDIV = $(control.formBase().element).find("#ImportType");
                    FilterSectionDIV.html(result.returnData);
                } else {
                    bootbox.alert(result.returnMessage);
                }
            } catch (e) {
                bootbox.alert("Failed -  " + e);
            }
            ContinueCallBack();
        }, function (error) {
            bootbox.alert(error);
            FailCallBack(error.toString());
        });
    };

    formBase.BeforeAddClick = function (control, ControlInfo, continueCallBack, failCallBack) {

        try {
            ControlInfo.userObject = {
                Description: formBase.getControl("Description").value(),
                DataType: formBase.getControl("DataType").value(),
                Interval: formBase.getControl("Interval").value(),
                IntervalTime: formBase.getControl("IntervalTimeRepresents").value(),
                TimeZone: formBase.getControl("IntTimeZone").value()
                
            };

            continueCallBack();

        }
        catch (e) {
            bootbox.alert("There Was An Error In The Code", failCallBack());
        }
    }

    formBase.AfterAddClick = function (control, ControlInfo, result, ContinueCallBack, FailCallBack) {

        try {

            if (result.success) {

        
                formBase.getControl("Description").value("");
                if (formBase.getControl("OpenItem").value() == true) {
                    try {
                        kWLink.runReport(control.element, result.returnData.targetReportGuid, result.returnData.targetReportPropertiesGuid, 1, null, function (res) { }, null, null)

                        if (result.returnMessage) {
                            bootbox.alert(result.returnMessage, function () { CloseBrowser() })
                        } else {
                            CloseBrowser()
                        }
                        ContinueCallBack();
                    }
                    catch (e) {
                        FailCallBack(e);
                    }
                }
                else {

                    if (result.returnMessage) {
                        bootbox.alert(result.returnMessage, function () { CloseBrowser() })
                    } else {
                        CloseBrowser()
                    }

                    ContinueCallBack();

                }

            }
            else {
                bootbox.alert(result.returnMessage);
                ContinueCallBack();
            }
        }

        catch (e) {
            FailCallBack(e);
        }

    }
}
    